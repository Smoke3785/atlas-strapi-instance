(function () {
    var path = require("path");
    var fs = require("fs");
    var appendedComment = "// This file is generated by a script (typeSync.ts) in the associate Strapi instance. Do not modify it directly.\n";
    var appendedDate = "// Generated on: ".concat(new Date().toUTCString(), "\n\n");
    var frontendTypesFolder = "C:\\Users\\owenr\\Documents\\GitHub\\gcollective-website-next\\src\\@types";
    var typesDirectory = path.join(process.cwd(), "./types/generated");
    var typeFiles = fs.readdirSync(typesDirectory);
    var files = typeFiles.map(function (file) {
        var src = path.join(process.cwd(), "./types/generated/".concat(file));
        var dest = path.join(frontendTypesFolder, file);
        return { src: src, dest: dest };
    });
    function copyFile(_a) {
        var src = _a.src, dest = _a.dest;
        var destinationDir = path.dirname(dest);
        // Check if source file exists
        if (!fs.existsSync(src)) {
            console.error("Source file does not exist: ".concat(src));
            process.exit(1);
        }
        // Ensure destination directory exists or create it
        if (!fs.existsSync(destinationDir)) {
            fs.mkdirSync(destinationDir, { recursive: true });
        }
        // Read the source file, modify its content and write to the destination file
        var content = [
            appendedComment,
            appendedDate,
            fs.readFileSync(src, "utf8"),
        ].join("");
        try {
            fs.writeFileSync(dest, content);
            console.log("File ".concat(src, " copied and modified successfully!"));
            console.log("Copied to ".concat(dest, "\n"));
        }
        catch (error) {
            console.error("Error writing to destination file: ".concat(error));
            process.exit(1);
        }
    }
    files.forEach(copyFile);
})();
